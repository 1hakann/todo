{"version":3,"sources":["components/TodoList.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","listTodo","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","faTrash","onClick","deleteItem","duration","easing","Todo","state","currentItem","handleInput","bind","addTodo","this","setState","Date","now","preventDefault","newTodo","console","log","NewItems","filteredItems","filter","onSubmit","placeholder","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";mSAyCeA,MAhCX,SAAkBC,GAGd,IAEMC,EAFQD,EAAME,MAEGC,KAAI,SAAAC,GACvB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACA,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAML,UAAU,YAAYM,SACrE,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAG7C,+BAGI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAMC,IAASC,QAAU,kBAAMjB,EAAMkB,WAAWd,EAAKI,cAVhEJ,EAAKI,QAiB3C,OACI,8BACI,cAAC,IAAD,CAAUW,SAAU,IAAKC,OAAO,cAAhC,SACMnB,OC0DPoB,E,kDAxFX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IAEDsB,MAAQ,CACTpB,MAAM,GACNqB,YAAa,CACTb,KAAM,GACNF,IAAK,KAKb,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBAEf,EAAKP,WAAa,EAAKA,WAAWO,KAAhB,gBAClB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,gBAhBF,E,+CAoBnB,SAAYb,GACRe,KAAKC,SAAU,CACXL,YAAa,CACTb,KAAME,EAAEE,OAAOL,MACfD,IAAKqB,KAAKC,W,qBAMtB,SAAQlB,GACJA,EAAEmB,iBAEF,IAAMC,EAAUL,KAAKL,MAAMC,YAG3B,GAFAU,QAAQC,IAAIF,GAEQ,KAAjBA,EAAQtB,KAAa,CACpB,IAAMyB,EAAQ,sBAAOR,KAAKL,MAAMpB,OAAlB,CAAyB8B,IACvCL,KAAKC,SAAS,CACV1B,MAAOiC,EACPZ,YAAa,CACTb,KAAM,GACNF,IAAK,S,wBAOrB,SAAWA,GACP,IAAM4B,EAAgBT,KAAKL,MAAMpB,MAAMmC,QAAO,SAAAjC,GAAI,OAAIA,EAAKI,MAAMA,KACjEmB,KAAKC,SAAS,CACV1B,MAAOkC,M,uBAIf,SAAU1B,EAAMF,GACZ,IAAMN,EAAQyB,KAAKL,MAAMpB,MACzBA,EAAMC,KAAI,SAAAC,GACHA,EAAKI,MAAQA,IACZJ,EAAKM,KAAOA,MAGpBiB,KAAKC,SAAS,CACV1B,MAAOA,M,oBAIf,WACI,OAEI,aADA,CACA,OAAKG,UAAU,iBAAf,SACI,sBAAKA,UAAU,YAAf,UACA,oBAAIA,UAAU,UAAd,+BACA,uBAAME,GAAG,YAAY+B,SAAUX,KAAKD,QAApC,UAEI,uBAAOpB,KAAK,OAAOiC,YAAY,gBAAgB9B,MAAOkB,KAAKL,MAAMC,YAAYb,KAAMC,SAAUgB,KAAKH,cAClG,wBAAQlB,KAAK,SAAb,yBAIJ,cAAC,EAAD,CAAUJ,MAAOyB,KAAKL,MAAMpB,MAAOgB,WAAYS,KAAKT,WAAYL,UAAWc,KAAKd,qB,GAnF5E2B,IAAMC,W,MCUXC,MARf,WACE,OACE,qBAAKrC,UAAU,WAAf,SACE,cAAC,EAAD,OCISsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2a4721f.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FlipMove from 'react-flip-move';\nimport './TodoList.css'\n\nimport ReactDOM from 'react-dom'\nimport { faTrash, faPen } from '@fortawesome/free-solid-svg-icons'\n\n    //! 8- Todolist component created\n    function TodoList(props) {\n\n        //! 9- We got the props as items so we can use it in the ListTodos comp in the todo.\n        const items = props.items\n        //! 10- -Since the tasks we received are an object, we converted it to an array with map().\n        const listTodo = items.map(item => {\n            return <div className=\"list\" key={item.key}>\n                <p>\n                <input type=\"text\" id={item.key} value={item.text} className=\"editInput\" onChange={\n                    (e) => {\n                        props.setUpdate(e.target.value, item.key)\n                    }\n                } />\n                <span>\n                    {/* //! 14- Fontawesome added to the project and used. */}\n                    {/* //! 15- onclick funct. added */}\n                    <FontAwesomeIcon className=\"faicons\" icon={faTrash} onClick={ () => props.deleteItem(item.key)} />\n                </span>\n                </p>\n            </div>\n        })\n\n        //! 11-And we showed this in return.\n        return (\n            <div>\n                <FlipMove duration={500} easing=\"ease-in-out\">\n                    { listTodo }\n                </FlipMove>\n            </div>\n        )\n    } \n\nexport default TodoList;\n","import React, { Component } from 'react'\nimport TodoList from './TodoList'\n\n class Todo extends React.Component {\n     //! 2-Constructor was created and received props and state.\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            items:[],\n            currentItem: {\n                text: '',\n                key: ''\n            }\n        }\n\n        //! 6- Bind operation done.\n        this.handleInput = this.handleInput.bind(this)\n        this.addTodo = this.addTodo.bind(this)\n        //! 18- binding for delete icon\n        this.deleteItem = this.deleteItem.bind(this)\n        this.setUpdate = this.setUpdate.bind(this)\n    }\n\n    //! 4-The function (for input) is coded.\n    handleInput(e) {\n        this.setState ({\n            currentItem: {\n                text: e.target.value,\n                key: Date.now()\n            }\n        })\n    }\n\n    //! 5- The function (for form) is coded.\n    addTodo(e) {\n        e.preventDefault();\n\n        const newTodo = this.state.currentItem\n        console.log(newTodo);\n        //! 7-Item 5 has been developed.\n        if(newTodo.text !== '') {\n            const NewItems = [...this.state.items, newTodo];\n            this.setState({\n                items: NewItems,\n                currentItem: {\n                    text: '',   \n                    key: ''\n                }\n            })\n        }\n    }\n\n    /* //! 17- let's define the function  */\n    deleteItem(key) {\n        const filteredItems = this.state.items.filter(item => item.key!==key);\n        this.setState({\n            items: filteredItems\n        })\n    }\n\n    setUpdate(text, key) {\n        const items = this.state.items;\n        items.map(item => {\n            if(item.key === key) {\n                item.text = text;\n            }\n        })\n        this.setState({\n            items: items\n        })\n    }\n\n    render() {\n        return (\n            //! 1-The main structure has been created. Worked css for app view. (return in render func inside Todo.js)\n            <div className=\"todo-container\">\n                <div className=\"todo-body\">\n                <h1 className=\"todo-h1\">What's Your Plan?</h1>\n                <form id=\"todo-form\" onSubmit={this.addTodo}>\n                      {/* //! 3-Added input a value and onChange function. Added onSubmit to the form. And the component called in the app  */}\n                    <input type=\"text\" placeholder=\"Write a task!\" value={this.state.currentItem.text} onChange={this.handleInput} />\n                    <button type=\"submit\">Add Todo</button>\n                </form>\n                {/* 12-Comp Added */}\n                {/* 16-Add the function added above as attribute to the listItem Component in todo. */}\n                <TodoList items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}></TodoList>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from '../src/components/Todo.js'\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}